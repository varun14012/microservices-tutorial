# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

#input {
#  beats {
#    port => 5044
#  }
#}

#output {
#  elasticsearch {
#    hosts => ["http://localhost:9200"]
#    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
#    #user => "elastic"
#    #password => "changeme"
#  }
#}

#input { stdin { } }
#output {
#  elasticsearch { hosts => ["localhost:9200"] }
#  stdout { codec => rubydebug }
#}

input {
    rabbitmq {
	arguments => { "x-queue-type" => "classic" }
    host => "localhost"
    queue => "log-message-queue"
    durable => true
    key => "logging-service"
    exchange => "ex_logstash"
	exchange_type=>"direct"
    prefetch_count => 50
    port => 5672
    user => "guest"
    password => "guest"
	
	}
}


# filter {
#     if [@metadata][rabbitmq_properties][timestamp] {
#        date {
#          match => ["[@metadata][rabbitmq_properties][timestamp]", "UNIX"]
#        }
#      }
#    }
 
#filter {
  #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
#  if [message] =~ "\tat" {
#    grok {
#      match => ["message", "^(\tat)"]
#      add_tag => ["stacktrace"]
#    }
#  }
 
# grok {
#    match => [ "message", 
#               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
#               "message",
#               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
#             ]
#  }
 
  
#  date {
#    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
#  }
#}
 
output {
elasticsearch { 
      hosts => ["http://localhost:9200/"]
      index => "timestamp-%{+YYYY.MM.dd}"
	  document_type => "system_logs"
  }
  stdout {codec => rubydebug }
 

}
